#!/bin/bash

# Check if first argument is supplied and is a valid integer
if ! [[ $1 =~ ^[1-9]+$ ]];
then
    echo "Please supply a valid positive integer."
    exit 1
fi

playcount=$1
shift

directories=""
originalIFS=$IFS
IFS=$(echo -en "\n\b")
for series in $@;
do
    directories="$directories \"$series\""
done
IFS=$originalIFS


if [ -z "$directories" ];
then
    echo "Please supply series to play."
        exit 2
fi

# TODO: Make this default, but overridable with --no-new-tmux-window
# TODO: Improve find such that it excludes images and other garbage
#echo find "$directories" -type f | shuf -n $playcount | videoplay

#tmux set-window-option -t 0 set-remain-on-exit on  # for debugging to keep panes open after process exits


### IMPORTANT
# The use of intermediate script `seriesplay-play-wrapper' helps fix two problems:
#   1. It will have a tty to inherit from the parent process, whereas passing the find/videoplay command directly to tmux new-window causes it to set tty=/dev/? for some reason.
#   2. Without it the videoplay loop stops after the first video file, killing the tmux pane somehow.
#
echo ${directories}
tmux new-window -d -n "seriesplay" -c /volume1/shows/__Library "seriesplay-play-wrapper $playcount ${directories}" 


#TODO: Optionally update videoplay such that it renames the tmux window to the currently played series
